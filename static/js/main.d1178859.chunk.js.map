{"version":3,"sources":["Components/NavBar/NavBar.js","constants/constants.js","axios.js","Components/Banner/Banner.js","Components/RowPost/RowPost.js","urls.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","src","alt","API_KEY","imageUrl","instance","axios","create","baseURL","Banner","useState","movie","setMovie","useEffect","get","then","response","console","log","data","results","style","backgroundImage","backdrop_path","title","overview","RowPost","props","movies","setMovies","urlId","setUrlId","url","catch","e","alert","map","obj","onClick","id","length","isSmall","opts","height","width","playerVars","autoplay","videoId","key","originals","action","comedy","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1178859.chunk.js","sourcesContent":["import React from 'react'\r\nimport './NavBar.css'\r\n\r\nfunction NavBar() {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\" alt=\"Logo\" />\r\n            <img className=\"avatar\" src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\" alt=\"avatar\" />\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","export const baseUrl = 'https://api.themoviedb.org/3';\r\nexport const API_KEY = 'a950c2b87714bca732ef8006bb7651d3'\r\n\r\nexport const imageUrl = 'https://image.tmdb.org/t/p/original'","import axios from \"axios\";\r\nimport {baseUrl} from './constants/constants';\r\n\r\nconst instance = axios.create({\r\n    baseURL: baseUrl,\r\n  });\r\n\r\nexport default instance","import React, {useEffect, useState} from 'react'\r\nimport {API_KEY, imageUrl} from '../../constants/constants'\r\nimport axios from '../../axios'\r\nimport './Banner.css'\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState()\r\n    useEffect(() => {\r\n        axios.get(`trending/movie/week?api_key=${API_KEY}&language=en-US`).then((response)=>{\r\n            console.log(response.data.results[0]);\r\n            setMovie(response.data.results[0]);\r\n        })\r\n    }, [])\r\n    return (\r\n        \r\n        <div style = {{backgroundImage:`url(${movie ? imageUrl+movie.backdrop_path : ''})`}} className=\"banner\">\r\n            <div className=\"content\">\r\n\r\n                <h1 className=\"title\">{movie ? movie.title : ''}</h1>\r\n                <div className=\"banner_buttons\">\r\n                    <button className=\"button\">play</button>\r\n                    <button className=\"button\">my list</button>\r\n                </div>\r\n                <h1 className=\"description\"> {movie ? movie.overview: ''}</h1>\r\n            </div>\r\n            <div className=\"fade_bottom\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React, {useEffect, useState} from 'react'\r\nimport Youtube from 'react-youtube'\r\nimport './RowPost.css'\r\nimport { API_KEY, imageUrl } from '../../constants/constants'\r\nimport axios from '../../axios'\r\n\r\n\r\nfunction RowPost(props) {\r\n    const [movies, setMovies] = useState([])\r\n    const [urlId, setUrlId] = useState('')\r\n    useEffect(() => {\r\n       axios.get(props.url).then((response)=>{\r\n           console.log(response.data);\r\n           setMovies(response.data.results)\r\n       }).catch(e=>{\r\n           alert('Network Error')\r\n       })\r\n    }, [])\r\n    const opts = {\r\n        height: '390',\r\n        width: '100%',\r\n        playerVars: {\r\n          // https://developers.google.com/youtube/player_parameters\r\n          autoplay: 1,\r\n        },\r\n    };\r\n    const handleMovie = (id)=>{\r\n        console.log('movie id: '+ id);\r\n        axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(response=>{\r\n            console.log(response.data);\r\n            if (response.data.results.length!==0){\r\n                setUrlId(response.data.results[0])\r\n            } else{\r\n                console.log('trailer not Available')\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{props.title}</h2>\r\n            <div className=\"posters\">\r\n                {\r\n                movies.map((obj)=>\r\n                    <img onClick={()=>handleMovie(obj.id)} className={props.isSmall ? 'smallPoster' :\"poster\"} alt='poster' src={`${imageUrl+obj.backdrop_path}`} />\r\n                )}\r\n            </div>\r\n            { urlId && <Youtube opts={opts} videoId={urlId.key} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RowPost\r\n","import {API_KEY} from './constants/constants'\r\n\r\nexport const originals = `discover/tv?api_key=${API_KEY}&with_networks=213`\r\nexport const action = `discover/movie?api_key=${API_KEY}&with_genres=28`\r\nexport const comedy = `discover/movie?api_key=${API_KEY}&with_genres=27`","import React from 'react';\nimport NavBar from './Components/NavBar/NavBar';\nimport './App.css';\nimport Banner from './Components/Banner/Banner';\nimport RowPost from './Components/RowPost/RowPost';\nimport { action, comedy, originals } from './urls'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Banner />\n      <RowPost url={originals} title='Netflix Originals' />\n      <RowPost url={action} title='Action' isSmall/>\n      <RowPost url={comedy} title='Comedy' isSmall/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}